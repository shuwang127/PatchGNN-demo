(-130, -156, 'DDGctx', -1)
(-13, -18, 'DDGitems', 1)
(-138, -153, 'CDG', -1)
(-111, -122, 'DDGp', 1)
(-133, -138, 'DDGitems', -1)
(-13, -36, 'DDGalloc', 1)
(-13, -58, 'DDGsize', 1)
(-18, -111, 'DDGitems', 1)
(-156, -168, 'DDGalloc', -1)
(-156, -178, 'DDGalloc', -1)
(-10, -36, 'DDGctx', 1)
(-18, -33, 'CDG', 1)
(-133, -222, 'DDGsize', -1)
(-156, -173, 'CDG', -1)
(-130, -168, 'DDGctx', -1)
(-130, -178, 'DDGctx', -1)
(-36, -48, 'CDG', 1)
(-36, -58, 'DDGalloc', 1)
(-13, -111, 'DDGitems', 1)
(-10, -43, 'DDGctx', 1)
(-36, -53, 'CDG', 1)
(-13, -80, 'DDGitems', 1)
(-10, -111, 'DDGctx', 1)
(-222, -233, 'DDGp', -1)
(-98, -103, 'CDG', 1)
(-156, -163, 'CDG', -1)
(-75, -80, 'CDG', 1)
(-133, -200, 'DDGsize', -1)
(-10, -75, 'DDGctx', 1)
(-133, -178, 'DDGsize', -1)
(-80, -111, 'DDGitems', 1)
(-133, -138, 'DDGalloc', -1)
(-138, -222, 'DDGitems', -1)
(-130, -163, 'DDGctx', -1)
(-80, -111, 'DDGitems * size', 1)
(-156, -168, 'CDG', -1)
(-195, -200, 'CDG', -1)
(-133, -222, 'DDGitems', -1)
(-130, -222, 'DDGctx', -1)
(-130, -195, 'DDGctx', -1)
(-36, -122, 'CDG', 1)
(-10, -48, 'DDGctx', 1)
(-133, -200, 'DDGitems', -1)
(-36, -58, 'CDG', 1)
(-10, -53, 'DDGctx', 1)
(-126, -133, 'DDGsize', -1)
(-133, -156, 'DDGalloc', -1)
(-36, -111, 'CDG', 1)
(-156, -222, 'CDG', -1)
(-98, -108, 'CDG', 1)
(-58, -73, 'DDGp', 1)
(-138, -178, 'DDGitems', -1)
(-36, -48, 'DDGalloc', 1)
(-200, -222, 'DDGitems * size', -1)
(-195, -219, 'CDG', -1)
(-156, -173, 'DDGalloc', -1)
(-10, -80, 'DDGctx', 1)
(-18, -58, 'DDGitems', 1)
(-10, -98, 'DDGctx', 1)
(-75, -98, 'CDG', 1)
(-33, -36, 'DDGalloc', 1)
(-13, -111, 'DDGsize', 1)
(-156, -178, 'CDG', -1)
(-130, -173, 'DDGctx', -1)
(-36, -43, 'CDG', 1)
(-156, -193, 'CDG', -1)
(-36, -53, 'DDGalloc', 1)
(-13, -80, 'DDGsize', 1)
(-13, -18, 'DDGalloc', 1)
(-163, -178, 'DDGp', -1)
(-153, -156, 'DDGalloc', -1)
(-156, -195, 'CDG', -1)
(-18, -80, 'DDGitems', 1)
(-36, -73, 'CDG', 1)
(-178, -193, 'DDGp', -1)
(-156, -233, 'CDG', -1)
(-130, -200, 'DDGctx', -1)
(-6, -13, 'DDGsize', 1)
(-138, -156, 'DDGalloc', -1)
(-43, -58, 'DDGp', 1)
(-18, -36, 'DDGalloc', 1)
(-36, -75, 'CDG', 1)
(-80, -111, 'DDGsize', 1)
(-10, -58, 'DDGctx', 1)
(-244, -268, 'DDGr', 1)
(-481, -485, 'CDG', -1)
(-444, -485, 'DDGwbits', -1)
(-377, -384, 'CDG', 1)
(-268, -285, 'CDG', 1)
(-292, -389, 'DDGmemlevel', 1)
(-418, -471, 'DDGctx', -1)
(-259, -268, 'DDGr->headers_out.content_length_n', 1)
(-425, -444, 'DDGwbits', -1)
(-283, -268, 'DDGwbits', 1)
(-327, -410, 'CDG', 1)
(-242, -295, 'DDGctx', 1)
(-338, -343, 'DDGwbits', 1)
(-420, -435, 'DDGr', -1)
(-249, -389, 'DDGwbits', 1)
(-292, -309, 'DDGmemlevel', 1)
(-244, -331, 'DDGconf', 1)
(-254, -300, 'DDGmemlevel', 1)
(-425, -511, 'DDGwbits', -1)
(-463, -468, 'CDG', -1)
(-425, -471, 'DDGwbits', -1)
(-244, -254, 'DDGconf', 1)
(-444, -516, 'DDGwbits', -1)
(-254, -309, 'DDGmemlevel', 1)
(-268, -384, 'DDGwbits', 1)
(-418, -476, 'DDGctx', -1)
(-268, -389, 'DDGwbits', 1)
(-444, -459, 'CDG', -1)
(-268, -338, 'DDGwbits', 1)
(-305, -327, 'CDG', 1)
(-249, -309, 'DDGwbits', 1)
(-468, -476, 'DDGmemlevel', -1)
(-268, -343, 'DDGwbits', 1)
(-481, -516, 'CDG', -1)
(-420, -444, 'DDGr', -1)
(-244, -377, 'DDGconf', 1)
(-287, -300, 'DDGmemlevel', 1)
(-292, -300, 'DDGmemlevel', 1)
(-435, -444, 'DDGr->headers_out.content_length_n', -1)
(-418, -516, 'DDGctx', -1)
(-268, -309, 'DDGwbits', 1)
(-384, -389, 'DDGwbits', 1)
(-418, -485, 'DDGctx', -1)
(-254, -285, 'DDGmemlevel', 1)
(-327, -343, 'CDG', 1)
(-259, -268, 'CDG', 1)
(-287, -292, 'CDG', 1)
(-268, -283, 'CDG', 1)
(-331, -338, 'CDG', 1)
(-420, -504, 'DDGconf', -1)
(-420, -430, 'DDGconf', -1)
(-244, -259, 'DDGr', 1)
(-511, -516, 'DDGwbits', -1)
(-242, -343, 'DDGctx', 1)
(-430, -461, 'DDGmemlevel', -1)
(-244, -249, 'DDGconf', 1)
(-444, -511, 'DDGwbits', -1)
(-327, -389, 'CDG', 1)
(-418, -543, 'DDGctx', -1)
(-327, -370, 'CDG', 1)
(-435, -463, 'CDG', -1)
(-430, -476, 'DDGmemlevel', -1)
(-444, -461, 'CDG', -1)
(-468, -485, 'DDGmemlevel', -1)
(-430, -485, 'DDGmemlevel', -1)
(-287, -343, 'DDGmemlevel', 1)
(-259, -287, 'CDG', 1)
(-242, -309, 'DDGctx', 1)
(-327, -377, 'CDG', 1)
(-463, -476, 'DDGmemlevel', -1)
(-444, -459, 'DDGwbits', -1)
(-327, -331, 'CDG', 1)
(-481, -543, 'CDG', -1)
(-504, -511, 'CDG', -1)
(-463, -485, 'DDGmemlevel', -1)
(-242, -389, 'DDGctx', 1)
(-249, -295, 'DDGwbits', 1)
(-249, -268, 'DDGwbits', 1)
(-242, -300, 'DDGctx', 1)
(-285, -287, 'DDGmemlevel', 1)
(-249, -384, 'DDGwbits', 1)
(-444, -471, 'DDGwbits', -1)
(-459, -444, 'DDGwbits', -1)
(-435, -444, 'CDG', -1)
(-254, -287, 'DDGmemlevel', 1)
(-425, -516, 'DDGwbits', -1)
(-249, -338, 'DDGwbits', 1)
(-254, -389, 'DDGmemlevel', 1)
(-481, -504, 'CDG', -1)
(-254, -343, 'DDGmemlevel', 1)
(-268, -283, 'DDGwbits', 1)
(-268, -295, 'DDGwbits', 1)
(-425, -485, 'DDGwbits', -1)
(-420, -425, 'DDGconf', -1)
(-287, -389, 'DDGmemlevel', 1)
(-430, -463, 'DDGmemlevel', -1)
(-292, -343, 'DDGmemlevel', 1)
(-242, -410, 'DDGctx', 1)
(-287, -309, 'DDGmemlevel', 1)
(-305, -309, 'CDG', 1)
(-242, -370, 'DDGctx', 1)
(-249, -343, 'DDGwbits', 1)
(-461, -463, 'DDGmemlevel', -1)
===========================
(-6, 1, '-', 0, '+933', 'void *opaque')
(-130, -1, '-', 0, '-933', '*ctx = opaque')
(-48, 1, '-', 0, '+954', 'ctx->free_mem += alloc')
(-33, 1, '-', 0, '+949', 'alloc = 8192')
(-106, 1, '-', 0, '+972', 'else')
(-200, -1, '-', 0, '-963', 'ngx_log_error(NGX_LOG_ALERT, ctx->request->connection->log, 0,\\n                      "gzip filter failed to use preallocated memory: "\\n                      "%ud of %ui", items * size, ctx->allocated)')
(-111, 1, '-', 0, '+976', 'p = ngx_palloc(ctx->request->pool, items * size)')
(-163, -1, '-', 0, '-951', 'p = ctx->free_mem')
(-108, 1, '-', 0, '+973', 'ngx_http_gzip_assume_intel = 1')
(-98, 1, '-', 0, '+969', 'if (ctx->intel)')
(-5, 1, '-', 0, '+932', 'ngx_http_gzip_filter_alloc (void *opaque,u_int items,u_int size)')
(-73, 1, '-', 0, '+961', 'return p;')
(-103, 1, '-', 0, '+970', 'ngx_http_gzip_assume_zlib_ng = 1')
(-193, -1, '-', 0, '-959', 'return p;')
(-126, -1, '-', 0, '-931', 'void *opaque')
(-43, 1, '-', 0, '+953', 'p = ctx->free_mem')
(-10, 1, '-', 0, '+935', '*ctx = opaque')
(-36, 1, '-', 0, '+952', 'if (alloc <= ctx->allocated)')
(-217, -1, '-', 0, '-970', 'else')
(-222, -1, '-', 0, '-974', 'p = ngx_palloc(ctx->request->pool, items * size)')
(-122, 1, '-', 0, '+978', 'return p;')
(-53, 1, '-', 0, '+955', 'ctx->allocated -= alloc')
(-58, 1, '-', 0, '+957', 'ngx_log_debug4(NGX_LOG_DEBUG_HTTP, ctx->request->connection->log, 0,\\n                       "gzip alloc: n:%ud s:%ud a:%ui p:%p",\\n                       items, size, alloc, p)')
(-219, -1, '-', 0, '-971', 'ngx_http_gzip_assume_intel = 1')
(-195, -1, '-', 0, '-962', 'if (ctx->intel)')
(-173, -1, '-', 0, '-953', 'ctx->allocated -= alloc')
(-125, -1, '-', 0, '-930', 'ngx_http_gzip_filter_alloc (void *opaque,u_int items,u_int size)')
(-75, 1, '-', 0, '+964', 'if (ctx->zlib_ng)')
(-138, -1, '-', 0, '-940', 'if (items == 1 && alloc % 512 != 0 && alloc < 8192)')
(-13, 1, '-', 0, '+940', 'alloc = items * size')
(-233, -1, '-', 0, '-976', 'return p;')
(-153, -1, '-', 0, '-947', 'alloc = 8192')
(-168, -1, '-', 0, '-952', 'ctx->free_mem += alloc')
(-133, -1, '-', 0, '-938', 'alloc = items * size')
(-178, -1, '-', 0, '-955', 'ngx_log_debug4(NGX_LOG_DEBUG_HTTP, ctx->request->connection->log, 0,\\n                       "gzip alloc: n:%ud s:%ud a:%ui p:%p",\\n                       items, size, alloc, p)')
(-18, 1, '-', 0, '+942', 'if (items == 1 && alloc % 512 != 0 && alloc < 8192)')
(-156, -1, '-', 0, '-950', 'if (alloc <= ctx->allocated)')
(-80, 1, '-', 0, '+965', 'ngx_log_error(NGX_LOG_ALERT, ctx->request->connection->log, 0,\\n                      "gzip filter failed to use preallocated memory: "\\n                      "%ud of %ui", items * size, ctx->allocated)')
(-377, 1, '-', 0, '+535', 'if (conf->level == 1)')
(-516, -1, '-', 0, '-522', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + (1 << (ngx_max(memlevel, 8) + 8))\\n                         + (1 << (memlevel + 8))')
(-242, 1, '-', 0, '+469', 'ngx_http_gzip_ctx_t *ctx')
(-259, 1, '-', 0, '+479', 'if (r->headers_out.content_length_n > 0)')
(-295, 1, '-', 0, '+493', 'ctx->wbits = wbits')
(-338, 1, '-', 0, '+521', 'wbits = ngx_max(wbits, 13)')
(-300, 1, '-', 0, '+494', 'ctx->memlevel = memlevel')
(-249, 1, '-', 0, '+476', 'wbits = conf->wbits')
(-389, 1, '-', 0, '+539', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + 131072 + (1 << (memlevel + 8))')
(-502, -1, '-', 0, '-509', 'else')
(-430, -1, '-', 0, '-475', 'memlevel = conf->memlevel')
(-471, -1, '-', 0, '-491', 'ctx->wbits = wbits')
(-463, -1, '-', 0, '-486', 'if (memlevel < 1)')
(-444, -1, '-', 0, '-481', 'while (r->headers_out.content_length_n < ((1 << (wbits - 1)) - 262))')
(-240, 1, '-', 0, '+468', 'ngx_http_gzip_filter_memory (ngx_http_request_t *r,ngx_http_gzip_ctx_t *ctx)')
(-370, 1, '-', 0, '+527', 'ctx->intel = 1')
(-543, -1, '-', 0, '-525', 'ctx->intel = 1')
(-459, -1, '-', 0, '-482', 'wbits--')
(-283, 1, '-', 0, '+484', 'wbits--')
(-268, 1, '-', 0, '+483', 'while (r->headers_out.content_length_n < ((1 << (wbits - 1)) - 262))')
(-305, 1, '-', 0, '+508', 'if (!ngx_http_gzip_assume_intel)')
(-292, 1, '-', 0, '+489', 'memlevel = 1')
(-468, -1, '-', 0, '-487', 'memlevel = 1')
(-485, -1, '-', 0, '-507', 'ctx->allocated = 8192 + (1 << (wbits + 2)) + (1 << (memlevel + 9))')
(-285, 1, '-', 0, '+485', 'memlevel--')
(-410, 1, '-', 0, '+541', 'ctx->zlib_ng = 1')
(-504, -1, '-', 0, '-518', 'if (conf->level == 1)')
(-327, 1, '-', 0, '+511', 'if (!ngx_http_gzip_assume_zlib_ng)')
(-481, -1, '-', 0, '-506', 'if (!ngx_http_gzip_assume_intel)')
(-461, -1, '-', 0, '-483', 'memlevel--')
(-416, -1, '-', 0, '-466', 'ngx_http_gzip_filter_memory (ngx_http_request_t *r,ngx_http_gzip_ctx_t *ctx)')
(-343, 1, '-', 0, '+524', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + (1 << (ngx_max(memlevel, 8) + 8))\\n                         + (1 << (memlevel + 8))')
(-287, 1, '-', 0, '+488', 'if (memlevel < 1)')
(-420, -1, '-', 0, '-472', 'conf = ngx_http_get_module_loc_conf(r, ngx_http_gzip_filter_module)')
(-435, -1, '-', 0, '-477', 'if (r->headers_out.content_length_n > 0)')
(-375, 1, '-', 0, '+529', 'else')
(-244, 1, '-', 0, '+474', 'conf = ngx_http_get_module_loc_conf(r, ngx_http_gzip_filter_module)')
(-309, 1, '-', 0, '+509', 'ctx->allocated = 8192 + (1 << (wbits + 2)) + (1 << (memlevel + 9))')
(-254, 1, '-', 0, '+477', 'memlevel = conf->memlevel')
(-331, 1, '-', 0, '+520', 'if (conf->level == 1)')
(-418, -1, '-', 0, '-467', 'ngx_http_gzip_ctx_t *ctx')
(-425, -1, '-', 0, '-474', 'wbits = conf->wbits')
(-511, -1, '-', 0, '-519', 'wbits = ngx_max(wbits, 13)')
(-384, 1, '-', 0, '+536', 'wbits = ngx_max(wbits, 13)')
(-476, -1, '-', 0, '-492', 'ctx->memlevel = memlevel')
---------------------------
(-130, -156, 'DDGctx', -1)
(-138, -153, 'CDG', -1)
(-133, -138, 'DDGitems', -1)
(-156, -168, 'DDGalloc', -1)
(-156, -178, 'DDGalloc', -1)
(-133, -222, 'DDGsize', -1)
(-156, -173, 'CDG', -1)
(-130, -168, 'DDGctx', -1)
(-130, -178, 'DDGctx', -1)
(-222, -233, 'DDGp', -1)
(-156, -163, 'CDG', -1)
(-133, -200, 'DDGsize', -1)
(-133, -178, 'DDGsize', -1)
(-133, -138, 'DDGalloc', -1)
(-138, -222, 'DDGitems', -1)
(-130, -163, 'DDGctx', -1)
(-156, -168, 'CDG', -1)
(-195, -200, 'CDG', -1)
(-133, -222, 'DDGitems', -1)
(-130, -222, 'DDGctx', -1)
(-130, -195, 'DDGctx', -1)
(-133, -200, 'DDGitems', -1)
(-126, -133, 'DDGsize', -1)
(-133, -156, 'DDGalloc', -1)
(-156, -222, 'CDG', -1)
(-138, -178, 'DDGitems', -1)
(-200, -222, 'DDGitems * size', -1)
(-195, -219, 'CDG', -1)
(-156, -173, 'DDGalloc', -1)
(-156, -178, 'CDG', -1)
(-130, -173, 'DDGctx', -1)
(-156, -193, 'CDG', -1)
(-163, -178, 'DDGp', -1)
(-153, -156, 'DDGalloc', -1)
(-156, -195, 'CDG', -1)
(-178, -193, 'DDGp', -1)
(-156, -233, 'CDG', -1)
(-130, -200, 'DDGctx', -1)
(-138, -156, 'DDGalloc', -1)
(-481, -485, 'CDG', -1)
(-444, -485, 'DDGwbits', -1)
(-418, -471, 'DDGctx', -1)
(-425, -444, 'DDGwbits', -1)
(-420, -435, 'DDGr', -1)
(-425, -511, 'DDGwbits', -1)
(-463, -468, 'CDG', -1)
(-425, -471, 'DDGwbits', -1)
(-444, -516, 'DDGwbits', -1)
(-418, -476, 'DDGctx', -1)
(-444, -459, 'CDG', -1)
(-468, -476, 'DDGmemlevel', -1)
(-481, -516, 'CDG', -1)
(-420, -444, 'DDGr', -1)
(-435, -444, 'DDGr->headers_out.content_length_n', -1)
(-418, -516, 'DDGctx', -1)
(-418, -485, 'DDGctx', -1)
(-420, -504, 'DDGconf', -1)
(-420, -430, 'DDGconf', -1)
(-511, -516, 'DDGwbits', -1)
(-430, -461, 'DDGmemlevel', -1)
(-444, -511, 'DDGwbits', -1)
(-418, -543, 'DDGctx', -1)
(-435, -463, 'CDG', -1)
(-430, -476, 'DDGmemlevel', -1)
(-444, -461, 'CDG', -1)
(-468, -485, 'DDGmemlevel', -1)
(-430, -485, 'DDGmemlevel', -1)
(-463, -476, 'DDGmemlevel', -1)
(-444, -459, 'DDGwbits', -1)
(-481, -543, 'CDG', -1)
(-504, -511, 'CDG', -1)
(-463, -485, 'DDGmemlevel', -1)
(-444, -471, 'DDGwbits', -1)
(-459, -444, 'DDGwbits', -1)
(-435, -444, 'CDG', -1)
(-425, -516, 'DDGwbits', -1)
(-481, -504, 'CDG', -1)
(-425, -485, 'DDGwbits', -1)
(-420, -425, 'DDGconf', -1)
(-430, -463, 'DDGmemlevel', -1)
(-461, -463, 'DDGmemlevel', -1)
===========================
(-130, -1, '-', 0, '-933', '*ctx = opaque')
(-200, -1, '-', 0, '-963', 'ngx_log_error(NGX_LOG_ALERT, ctx->request->connection->log, 0,\\n                      "gzip filter failed to use preallocated memory: "\\n                      "%ud of %ui", items * size, ctx->allocated)')
(-163, -1, '-', 0, '-951', 'p = ctx->free_mem')
(-193, -1, '-', 0, '-959', 'return p;')
(-126, -1, '-', 0, '-931', 'void *opaque')
(-217, -1, '-', 0, '-970', 'else')
(-222, -1, '-', 0, '-974', 'p = ngx_palloc(ctx->request->pool, items * size)')
(-219, -1, '-', 0, '-971', 'ngx_http_gzip_assume_intel = 1')
(-195, -1, '-', 0, '-962', 'if (ctx->intel)')
(-173, -1, '-', 0, '-953', 'ctx->allocated -= alloc')
(-125, -1, '-', 0, '-930', 'ngx_http_gzip_filter_alloc (void *opaque,u_int items,u_int size)')
(-138, -1, '-', 0, '-940', 'if (items == 1 && alloc % 512 != 0 && alloc < 8192)')
(-233, -1, '-', 0, '-976', 'return p;')
(-153, -1, '-', 0, '-947', 'alloc = 8192')
(-168, -1, '-', 0, '-952', 'ctx->free_mem += alloc')
(-133, -1, '-', 0, '-938', 'alloc = items * size')
(-178, -1, '-', 0, '-955', 'ngx_log_debug4(NGX_LOG_DEBUG_HTTP, ctx->request->connection->log, 0,\\n                       "gzip alloc: n:%ud s:%ud a:%ui p:%p",\\n                       items, size, alloc, p)')
(-156, -1, '-', 0, '-950', 'if (alloc <= ctx->allocated)')
(-516, -1, '-', 0, '-522', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + (1 << (ngx_max(memlevel, 8) + 8))\\n                         + (1 << (memlevel + 8))')
(-502, -1, '-', 0, '-509', 'else')
(-430, -1, '-', 0, '-475', 'memlevel = conf->memlevel')
(-471, -1, '-', 0, '-491', 'ctx->wbits = wbits')
(-463, -1, '-', 0, '-486', 'if (memlevel < 1)')
(-444, -1, '-', 0, '-481', 'while (r->headers_out.content_length_n < ((1 << (wbits - 1)) - 262))')
(-543, -1, '-', 0, '-525', 'ctx->intel = 1')
(-459, -1, '-', 0, '-482', 'wbits--')
(-468, -1, '-', 0, '-487', 'memlevel = 1')
(-485, -1, '-', 0, '-507', 'ctx->allocated = 8192 + (1 << (wbits + 2)) + (1 << (memlevel + 9))')
(-504, -1, '-', 0, '-518', 'if (conf->level == 1)')
(-481, -1, '-', 0, '-506', 'if (!ngx_http_gzip_assume_intel)')
(-461, -1, '-', 0, '-483', 'memlevel--')
(-416, -1, '-', 0, '-466', 'ngx_http_gzip_filter_memory (ngx_http_request_t *r,ngx_http_gzip_ctx_t *ctx)')
(-420, -1, '-', 0, '-472', 'conf = ngx_http_get_module_loc_conf(r, ngx_http_gzip_filter_module)')
(-435, -1, '-', 0, '-477', 'if (r->headers_out.content_length_n > 0)')
(-418, -1, '-', 0, '-467', 'ngx_http_gzip_ctx_t *ctx')
(-425, -1, '-', 0, '-474', 'wbits = conf->wbits')
(-511, -1, '-', 0, '-519', 'wbits = ngx_max(wbits, 13)')
(-476, -1, '-', 0, '-492', 'ctx->memlevel = memlevel')
---------------------------
(-13, -18, 'DDGitems', 1)
(-111, -122, 'DDGp', 1)
(-13, -36, 'DDGalloc', 1)
(-13, -58, 'DDGsize', 1)
(-18, -111, 'DDGitems', 1)
(-10, -36, 'DDGctx', 1)
(-18, -33, 'CDG', 1)
(-36, -48, 'CDG', 1)
(-36, -58, 'DDGalloc', 1)
(-13, -111, 'DDGitems', 1)
(-10, -43, 'DDGctx', 1)
(-36, -53, 'CDG', 1)
(-13, -80, 'DDGitems', 1)
(-10, -111, 'DDGctx', 1)
(-98, -103, 'CDG', 1)
(-75, -80, 'CDG', 1)
(-10, -75, 'DDGctx', 1)
(-80, -111, 'DDGitems', 1)
(-80, -111, 'DDGitems * size', 1)
(-36, -122, 'CDG', 1)
(-10, -48, 'DDGctx', 1)
(-36, -58, 'CDG', 1)
(-10, -53, 'DDGctx', 1)
(-36, -111, 'CDG', 1)
(-98, -108, 'CDG', 1)
(-58, -73, 'DDGp', 1)
(-36, -48, 'DDGalloc', 1)
(-10, -80, 'DDGctx', 1)
(-18, -58, 'DDGitems', 1)
(-10, -98, 'DDGctx', 1)
(-75, -98, 'CDG', 1)
(-33, -36, 'DDGalloc', 1)
(-13, -111, 'DDGsize', 1)
(-36, -43, 'CDG', 1)
(-36, -53, 'DDGalloc', 1)
(-13, -80, 'DDGsize', 1)
(-13, -18, 'DDGalloc', 1)
(-18, -80, 'DDGitems', 1)
(-36, -73, 'CDG', 1)
(-6, -13, 'DDGsize', 1)
(-43, -58, 'DDGp', 1)
(-18, -36, 'DDGalloc', 1)
(-36, -75, 'CDG', 1)
(-80, -111, 'DDGsize', 1)
(-10, -58, 'DDGctx', 1)
(-244, -268, 'DDGr', 1)
(-377, -384, 'CDG', 1)
(-268, -285, 'CDG', 1)
(-292, -389, 'DDGmemlevel', 1)
(-259, -268, 'DDGr->headers_out.content_length_n', 1)
(-283, -268, 'DDGwbits', 1)
(-327, -410, 'CDG', 1)
(-242, -295, 'DDGctx', 1)
(-338, -343, 'DDGwbits', 1)
(-249, -389, 'DDGwbits', 1)
(-292, -309, 'DDGmemlevel', 1)
(-244, -331, 'DDGconf', 1)
(-254, -300, 'DDGmemlevel', 1)
(-244, -254, 'DDGconf', 1)
(-254, -309, 'DDGmemlevel', 1)
(-268, -384, 'DDGwbits', 1)
(-268, -389, 'DDGwbits', 1)
(-268, -338, 'DDGwbits', 1)
(-305, -327, 'CDG', 1)
(-249, -309, 'DDGwbits', 1)
(-268, -343, 'DDGwbits', 1)
(-244, -377, 'DDGconf', 1)
(-287, -300, 'DDGmemlevel', 1)
(-292, -300, 'DDGmemlevel', 1)
(-268, -309, 'DDGwbits', 1)
(-384, -389, 'DDGwbits', 1)
(-254, -285, 'DDGmemlevel', 1)
(-327, -343, 'CDG', 1)
(-259, -268, 'CDG', 1)
(-287, -292, 'CDG', 1)
(-268, -283, 'CDG', 1)
(-331, -338, 'CDG', 1)
(-244, -259, 'DDGr', 1)
(-242, -343, 'DDGctx', 1)
(-244, -249, 'DDGconf', 1)
(-327, -389, 'CDG', 1)
(-327, -370, 'CDG', 1)
(-287, -343, 'DDGmemlevel', 1)
(-259, -287, 'CDG', 1)
(-242, -309, 'DDGctx', 1)
(-327, -377, 'CDG', 1)
(-327, -331, 'CDG', 1)
(-242, -389, 'DDGctx', 1)
(-249, -295, 'DDGwbits', 1)
(-249, -268, 'DDGwbits', 1)
(-242, -300, 'DDGctx', 1)
(-285, -287, 'DDGmemlevel', 1)
(-249, -384, 'DDGwbits', 1)
(-254, -287, 'DDGmemlevel', 1)
(-249, -338, 'DDGwbits', 1)
(-254, -389, 'DDGmemlevel', 1)
(-254, -343, 'DDGmemlevel', 1)
(-268, -283, 'DDGwbits', 1)
(-268, -295, 'DDGwbits', 1)
(-287, -389, 'DDGmemlevel', 1)
(-292, -343, 'DDGmemlevel', 1)
(-242, -410, 'DDGctx', 1)
(-287, -309, 'DDGmemlevel', 1)
(-305, -309, 'CDG', 1)
(-242, -370, 'DDGctx', 1)
(-249, -343, 'DDGwbits', 1)
===========================
(-6, 1, '-', 0, '+933', 'void *opaque')
(-48, 1, '-', 0, '+954', 'ctx->free_mem += alloc')
(-33, 1, '-', 0, '+949', 'alloc = 8192')
(-106, 1, '-', 0, '+972', 'else')
(-111, 1, '-', 0, '+976', 'p = ngx_palloc(ctx->request->pool, items * size)')
(-108, 1, '-', 0, '+973', 'ngx_http_gzip_assume_intel = 1')
(-98, 1, '-', 0, '+969', 'if (ctx->intel)')
(-5, 1, '-', 0, '+932', 'ngx_http_gzip_filter_alloc (void *opaque,u_int items,u_int size)')
(-73, 1, '-', 0, '+961', 'return p;')
(-103, 1, '-', 0, '+970', 'ngx_http_gzip_assume_zlib_ng = 1')
(-43, 1, '-', 0, '+953', 'p = ctx->free_mem')
(-10, 1, '-', 0, '+935', '*ctx = opaque')
(-36, 1, '-', 0, '+952', 'if (alloc <= ctx->allocated)')
(-122, 1, '-', 0, '+978', 'return p;')
(-53, 1, '-', 0, '+955', 'ctx->allocated -= alloc')
(-58, 1, '-', 0, '+957', 'ngx_log_debug4(NGX_LOG_DEBUG_HTTP, ctx->request->connection->log, 0,\\n                       "gzip alloc: n:%ud s:%ud a:%ui p:%p",\\n                       items, size, alloc, p)')
(-75, 1, '-', 0, '+964', 'if (ctx->zlib_ng)')
(-13, 1, '-', 0, '+940', 'alloc = items * size')
(-18, 1, '-', 0, '+942', 'if (items == 1 && alloc % 512 != 0 && alloc < 8192)')
(-80, 1, '-', 0, '+965', 'ngx_log_error(NGX_LOG_ALERT, ctx->request->connection->log, 0,\\n                      "gzip filter failed to use preallocated memory: "\\n                      "%ud of %ui", items * size, ctx->allocated)')
(-377, 1, '-', 0, '+535', 'if (conf->level == 1)')
(-242, 1, '-', 0, '+469', 'ngx_http_gzip_ctx_t *ctx')
(-259, 1, '-', 0, '+479', 'if (r->headers_out.content_length_n > 0)')
(-295, 1, '-', 0, '+493', 'ctx->wbits = wbits')
(-338, 1, '-', 0, '+521', 'wbits = ngx_max(wbits, 13)')
(-300, 1, '-', 0, '+494', 'ctx->memlevel = memlevel')
(-249, 1, '-', 0, '+476', 'wbits = conf->wbits')
(-389, 1, '-', 0, '+539', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + 131072 + (1 << (memlevel + 8))')
(-240, 1, '-', 0, '+468', 'ngx_http_gzip_filter_memory (ngx_http_request_t *r,ngx_http_gzip_ctx_t *ctx)')
(-370, 1, '-', 0, '+527', 'ctx->intel = 1')
(-283, 1, '-', 0, '+484', 'wbits--')
(-268, 1, '-', 0, '+483', 'while (r->headers_out.content_length_n < ((1 << (wbits - 1)) - 262))')
(-305, 1, '-', 0, '+508', 'if (!ngx_http_gzip_assume_intel)')
(-292, 1, '-', 0, '+489', 'memlevel = 1')
(-285, 1, '-', 0, '+485', 'memlevel--')
(-410, 1, '-', 0, '+541', 'ctx->zlib_ng = 1')
(-327, 1, '-', 0, '+511', 'if (!ngx_http_gzip_assume_zlib_ng)')
(-343, 1, '-', 0, '+524', 'ctx->allocated = 8192 + 16 + (1 << (wbits + 2))\\n                         + (1 << (ngx_max(memlevel, 8) + 8))\\n                         + (1 << (memlevel + 8))')
(-287, 1, '-', 0, '+488', 'if (memlevel < 1)')
(-375, 1, '-', 0, '+529', 'else')
(-244, 1, '-', 0, '+474', 'conf = ngx_http_get_module_loc_conf(r, ngx_http_gzip_filter_module)')
(-309, 1, '-', 0, '+509', 'ctx->allocated = 8192 + (1 << (wbits + 2)) + (1 << (memlevel + 9))')
(-254, 1, '-', 0, '+477', 'memlevel = conf->memlevel')
(-331, 1, '-', 0, '+520', 'if (conf->level == 1)')
(-384, 1, '-', 0, '+536', 'wbits = ngx_max(wbits, 13)')
